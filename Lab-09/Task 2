#include <iostream>
using namespace std;

class MenuItem {
protected:
    string dishName;
    double price;

public:
    MenuItem(string name, double price) : dishName(name), price(price) {}

    virtual void showDetails() const = 0;
    virtual void prepare() const = 0;

    virtual ~MenuItem() {}
};

class Appetizer : public MenuItem {
public:
    Appetizer(string name, double price) : MenuItem(name, price) {}

    void showDetails() const override {
        cout << "Appetizer: " << dishName << " - $" << price << endl;
    }

    void prepare() const override {
        cout << "Preparing appetizer: chopping, seasoning, plating.\n";
    }
};

class MainCourse : public MenuItem {
public:
    MainCourse(string name, double price) : MenuItem(name, price) {}

    void showDetails() const override {
        cout << "Main Course: " << dishName << " - $" << price << endl;
    }

    void prepare() const override {
        cout << "Preparing main course: marinating, cooking, garnishing.\n";
    }
};

int main() {
    MenuItem* m1 = new Appetizer("Spring Rolls", 6.50);
    MenuItem* m2 = new MainCourse("Grilled Chicken", 12.99);

    m1->showDetails();
    m1->prepare();
    cout << endl;

    m2->showDetails();
    m2->prepare();

    delete m1;
    delete m2;

    return 0;
}
